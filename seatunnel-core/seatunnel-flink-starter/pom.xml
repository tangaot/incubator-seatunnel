<?xml version="1.0" encoding="UTF-8"?>
<!--

    Licensed to the Apache Software Foundation (ASF) under one or more
    contributor license agreements.  See the NOTICE file distributed with
    this work for additional information regarding copyright ownership.
    The ASF licenses this file to You under the Apache License, Version 2.0
    (the "License"); you may not use this file except in compliance with
    the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <groupId>org.apache.seatunnel</groupId>
        <artifactId>seatunnel-core</artifactId>
        <version>${revision}</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <modelVersion>4.0.0</modelVersion>

    <artifactId>seatunnel-flink-starter</artifactId>

    <properties>
        <docker.repo>seatunnel-flink</docker.repo>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.apache.seatunnel</groupId>
            <artifactId>seatunnel-core-starter</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.seatunnel</groupId>
            <artifactId>seatunnel-translation-flink</artifactId>
            <version>${project.version}</version>
        </dependency>

        <!-- todo: use another module to execute new API?        -->
        <dependency>
            <groupId>org.apache.flink</groupId>
            <artifactId>flink-java</artifactId>
            <version>${flink.1.13.6.version}</version>
            <scope>${flink.scope}</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.flink</groupId>
            <artifactId>flink-table-planner_${scala.binary.version}</artifactId>
            <version>${flink.1.13.6.version}</version>
            <scope>${flink.scope}</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.flink</groupId>
            <artifactId>flink-streaming-java_${scala.binary.version}</artifactId>
            <version>${flink.1.13.6.version}</version>
            <scope>${flink.scope}</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.seatunnel</groupId>
            <artifactId>seatunnel-api-flink</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.seatunnel</groupId>
            <artifactId>seatunnel-transform-flink-sql</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.seatunnel</groupId>
            <artifactId>seatunnel-transform-flink-split</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.seatunnel</groupId>
            <artifactId>seatunnel-transform-flink-table2datastream</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.seatunnel</groupId>
            <artifactId>seatunnel-transform-flink-datastream2table</artifactId>
            <version>${project.version}</version>
        </dependency>
    </dependencies>

    <build>
        <finalName>${project.name}</finalName>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <configuration>
                    <artifactSet>
                        <excludes>
                            <!--
                                not excluded:
                                    jcl-over-slf4j(commons-logging to slf4j bridge)

                                Flink server lib already include:
                                    slf4j-api
                                    log4j-api
                                    log4j-core
                                    log4j-slf4j-impl
                                    log4j-1.2-api
                            -->
                            <exclude>org.slf4j:slf4j-api</exclude>
                            <exclude>org.slf4j:slf4j-jdk14</exclude>
                            <exclude>org.slf4j:slf4j-jcl</exclude>
                            <exclude>org.slf4j:slf4j-nop</exclude>
                            <exclude>org.slf4j:slf4j-simple</exclude>
                            <exclude>org.slf4j:slf4j-reload4j</exclude>
                            <exclude>org.slf4j:slf4j-log4j12</exclude>
                            <exclude>org.slf4j:log4j-over-slf4j</exclude>
                            <exclude>log4j:*</exclude>
                            <exclude>commons-logging:*</exclude>
                            <exclude>ch.qos.logback:*</exclude>
                            <exclude>org.apache.logging.log4j:log4j-api</exclude>
                            <exclude>org.apache.logging.log4j:log4j-core</exclude>
                            <exclude>org.apache.logging.log4j:log4j-slf4j-impl</exclude>
                            <exclude>org.apache.logging.log4j:log4j-1.2-api</exclude>
                            <exclude>org.apache.logging.log4j:log4j-to-slf4j</exclude>
                        </excludes>
                    </artifactSet>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <!--todo docker-->
<!--        <profile>
            <id>docker</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>${exec-maven-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>docker-build</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <environmentVariables>
                                        <DOCKER_BUILDKIT>1</DOCKER_BUILDKIT>
                                    </environmentVariables>
                                    <executable>docker</executable>
                                    <workingDirectory>${project.basedir}</workingDirectory>
                                    <arguments>
                                        <argument>build</argument>
                                        <argument>&#45;&#45;no-cache</argument>
                                        <argument>&#45;&#45;build-arg</argument>
                                        <argument>SCALA_VERSION=${scala.binary.version}</argument>
                                        <argument>&#45;&#45;build-arg</argument>
                                        <argument>FLINK_VERSION=${flink.version}</argument>
                                        <argument>-t</argument>
                                        <argument>${docker.hub}/${docker.repo}:${docker.tag}</argument>
                                        <argument>-t</argument>
                                        <argument>${docker.hub}/${docker.repo}:latest</argument>
                                        <argument>.</argument>
                                        <argument>&#45;&#45;file=src/main/docker/Dockerfile</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                            <execution>
                                <id>docker-push</id>
                                <phase>deploy</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <environmentVariables>
                                        <DOCKER_BUILDKIT>1</DOCKER_BUILDKIT>
                                    </environmentVariables>
                                    <executable>docker</executable>
                                    <workingDirectory>${project.basedir}</workingDirectory>
                                    <arguments>
                                        <argument>buildx</argument>
                                        <argument>build</argument>
                                        <argument>&#45;&#45;no-cache</argument>
                                        <argument>&#45;&#45;build-arg</argument>
                                        <argument>SCALA_VERSION=${scala.binary.version}</argument>
                                        <argument>&#45;&#45;build-arg</argument>
                                        <argument>FLINK_VERSION=${flink.version}</argument>
                                        <argument>&#45;&#45;push</argument>
                                        <argument>-t</argument>
                                        <argument>${docker.hub}/${docker.repo}:${docker.tag}</argument>
                                        <argument>-t</argument>
                                        <argument>${docker.hub}/${docker.repo}:latest</argument>
                                        <argument>.</argument>
                                        <argument>&#45;&#45;file=src/main/docker/Dockerfile</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>-->
    </profiles>
</project>
